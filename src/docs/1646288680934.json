{
  "value": {
    "id": "1646288680934",
    "title": "Canvas 特效",
    "content": "# Canvas 绘制特殊效果\n前边两节我们了解了如何绘制基本元素，接下来我们来一起学习如何绘制一些特殊的效果，让我们的canvas画面更丰富、更炫酷。\n\n本篇文章涉及的内容有：阴影（Shadow）、canvas渐变（CanvasGradient）、重复图形（CanvasPattern）。\n\n## 绘制阴影\n阴影可以用来营造一种立体的效果或者选中效果等，在绘制阴影时会使用到的api有：\n* shadowColor 阴影颜色\n* shadowBlur 阴影模糊范围\n* shadowOffsetX 阴影水平偏移量\n* shadowOffsetY 阴影垂直偏移量\n```\n// 画一个矩形框，并给它加上一些阴影效果\nctx.shadowColor = '#000';\nctx.shadowBlur = 5;\nctx.shadowOffsetX = 3;\nctx.shadowOffsetY = 3;\nctx.fillStyle = '#ddd';\nctx.fillRect(10, 10, 50, 50);\n```\n\n## 绘制渐变\ncanvas渐变分线性渐变、径向渐变和锥形渐变三种：\n* createLinearGradient()\n* createRadialGradient()\n* createCornicGradient()\n\n以上三个方法返回CanvasGradient对象，调用该对象的addColorStop方法来添加渐变色，该方法接受两个参数，分别是渐变色的位置（取值为0～1）和渐变色的颜色值。\n\n### 线性渐变\n```\n/**\n * createLinearGradient\n * @param{Number} x0 起点横坐标\n * @param{Number} y0 起点纵坐标\n * @param{Number} x1 止点横坐标\n * @param{Number} y1 止点纵坐标\n */\n\n// 在（0，0）位置画一个100*100矩形，并填充上渐变色，渐变色为从左到右，由红到蓝。\nconst gradient = ctx.createLinearGradient(0, 0, 100, 0);\ngradient.addColorStop(0, 'red');\ngradient.addColorStop(1, 'blue');\nctx.fillStyle = gradient;\nctx.fillRect(0, 0, 100, 100);\n```\n\n### 径向渐变\n```\n/**\n * createRadialGradient\n * @param{Number} x0 起点横坐标\n * @param{Number} y0 起点纵坐标\n * @param{Number} r0 起点半径\n * @param{Number} x1 止点横坐标\n * @param{Number} y1 止点纵坐标\n * @param{Number} r1 止点半径\n */\n\n// 在（50，50）位置画一个半径为50的圆，并填充上从中心到边缘由红到蓝的渐变色。\nconst gradient = ctx.createLinearGradient(50, 50, 0, 50, 50, 50);\ngradient.addColorStop(0, 'red');\ngradient.addColorStop(1, 'blue');\nctx.fillStyle = gradient;\nctx.beginPath();\nctx.arc(50, 50, 50, 0, Math.PI * 2);\nctx.closePath();\nctx.fill();\n```\n\n### 锥形渐变\n```\n/**\n * createCornicGradient\n * @param{Number} startAngle 起始角度\n * @param{Number} x 横坐标\n * @param{Number} y 纵坐标\n */\n\n// 在（50，50）位置画一个半径为50的圆，并填充上从12点钟方向顺时钟由红到蓝的渐变色。\nconst gradient = ctx.createCornicGradient(0, 50, 50);\ngradient.addColorStop(0, 'red');\ngradient.addColorStop(1, 'blue');\nctx.fillStyle = gradient;\nctx.beginPath();\nctx.arc(50, 50, 50, 0, Math.PI * 2);\nctx.closePath();\nctx.fill();\n```\n\n## 重复图形\n重复图形是指在指定的方向上重复绘制一张图片，应用场景有绘制水印、网格背景等。\n```\n/**\n * createCornicGradient\n * @param{Number} startAngle 起始角度\n * @param{Number} x 横坐标\n * @param{Number} y 纵坐标\n */\n\n// 在（50，50）位置画一个半径为50的圆，并填充上从12点钟方向顺时钟由红到蓝的渐变色。\nconst pattern = ctx.createPattern(img, 'repeat');\nctx.fillStyle = pattern;\nctx.fillRect(0, 0, 500, 400);\n```",
    "topic": "Canvas 绘图",
    "keywords": [
      "canvas",
      "js",
      "html5"
    ]
  }
}