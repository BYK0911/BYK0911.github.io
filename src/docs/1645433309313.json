{
  "value": {
    "id": "1645433309313",
    "title": "Canvas 绘图基础",
    "content": "# canvas 基本绘图\n本篇文章主要涉及以下内容\n* 画笔上下文\n* 绘制矩形\n* 绘制文本\n* 绘制图片\n\n## 画笔上下文\n画笔上下文对象（CanvasRenderingContext）是canvas绘图的核心对象，绘图api都挂载在上下文对象上。\n\n### 获取画笔上下文对象\n首先获取 canvas dom 元素，调用 getContext api 传入固定参数'2d'获取上下文对象:\n```\n// html中有canvas节点：<canvas id='cvs'></canvas>\n// 获取 canvas 元素\nconst cvs = document.getElementById('cvs');\n// 获取上下文对象\nconst ctx = canvas.getContext('2d');\n```\n\n### 上下文对象的常用属性设置\n绘图过程中，画笔的颜色、字体、线型等状态，上下文对象都提供了相应的api来进行设置。\n\n#### 颜色设置\n```\n// css中所支持的颜色，均可以在画笔上下文上使用;\n\n// 通过 fillStyle 设置填充色;\nctx.fillStyle = '#fff';\nctx.fillStyle = 'rgba(255,255,255,1);\nctx.fillStyle = 'white';\n\n// 通过 strokeStyle 设置描边颜色；\nctx.strokeStyle = '#ddd';\n```\n\n#### 字体设置\n```\n// 设置字体字号字重\nctx.font = 'bold 12px sanserif';\n\n// 设置文本水平对齐方式\nctx.textAlign = 'left' // 文本左对齐\nctx.textAlign = 'center' // 文本水平居中\nctx.textAlign = 'right' // 文本右对齐\n\n// 设置文本基线位置\nctx.textBaseline = 'top' // 顶部对齐\nctx.textBaseline = 'middle' // 垂直居中对齐\nctx.textBaseline = 'bottom' // 底部部对齐\nctx.textBaseline = 'hanging' // 悬挂基线对齐\nctx.textBaseline = 'alphabetic' // 字母基线对齐\n```\n#### 线型设置\n```\n// 设置线宽\nctx.lineWidth = 1;\n\n// 设置线型\nctx.setLineDash([1,0]); // 实线效果\nctx.setLineDash([1,1]); // 虚线效果\n\n// 端点形状\nctx.lineCap = 'butt' // 方形\nctx.lineCap = 'butt' // 方形，多出半个线宽的厚度\nctx.lineCap = 'round' // 圆形\n\n// 拐点形状\nctx.lineJoin = 'miter' // 尖角\nctx.lineJoin = 'bevel' // 平角\nctx.lineJoin = 'round' // 圆角\n```\n\n## 绘制矩形\n绘制矩形分填充矩形和描边矩形两种方式\n### 填充矩形 - fillRect\n```\n/**\n * fillRect 填充矩形\n * @param {Number} x 横坐标\n * @param {Number} y 纵坐标\n * @param {Number} width 宽度\n * @param {Number} height 高度\n **/\n\n// 在坐标（100，100）的位置，绘制一个50*50的蓝色矩形；\nctx.fillStyle = 'blue';\nctx.fillRect(100, 100, 50, 50);\n```\n### 描边矩形 - strokeRect\n```\n/**\n * strokeRect 描边矩形\n * @param {Number} x 横坐标\n * @param {Number} y 纵坐标\n * @param {Number} width 宽度\n * @param {Number} height 高度\n **/\n\n// 在坐标（100，100）的位置，绘制一个边框宽度为2px，尺寸为50*50的黑色矩形框；\nctx.lineWidth = 2;\nctx.strokeStyle = 'black';\nctx.strokeRect(100, 100, 50, 50);\n```\n\n## 绘制字体\n绘制字体同样分为填充字体和描边字体两种方式\n### 填充字体 - fillText\n```\n/**\n * fillText 填充字体\n * @param {String} text 文本内容\n * @param {Number} x 横坐标\n * @param {Number} y 纵坐标\n **/\n\n// 以（100，100）为中心点，绘制 'Hello World' 字符；\nctx.textAlign = 'center';\nctx.textBaseline = 'middle';\nctx.fillText('Hello World');\n```\n### 描边字体 - strokeText\n```\n/**\n * strokeText 描边字体\n * @param {String} text 文本内容\n * @param {Number} x 横坐标\n * @param {Number} y 纵坐标\n **/\n\nctx.strokeText('描边字体', 100, 100);\n```\n\n## 绘制图片\n```\n/**\n * drawImage \n * @param {ImageSource} image 图片\n * @param {Number} x 横坐标\n * @param {Number} y 纵坐标\n * @param {Number} width 宽度\n * @param {Number} height 高度\n **/\n\nctx.drawImage(img, 0, 0, 100, 100);\n```\n",
    "topic": "Canvas 绘图",
    "keywords": [
      "canvas",
      "js"
    ]
  }
}