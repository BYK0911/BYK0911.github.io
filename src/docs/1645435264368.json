{
  "value": {
    "id": "1645435264368",
    "title": "Git 常用操作",
    "content": "## Git\n\n###  获取Git仓库\n\n``` bash\n# 初始化仓库\ngit init \n\n# 克隆仓库\ngit clone <url> [project-name]\n```\n\n### 远程仓库\n```bash\n# 查看远程仓库\ngit remote\n\n# 显示仓库url\ngit remote -v\n\n# 添加远程仓库\ngit remote add <shortname> <url>\n\n# 从远程仓库拉取信息\ngit fetch [remote-name]\n\n# 拉取并合并\ngit pull [remote-name]\n\n# 推送到远程分支\ngit push [remote-name remote-branch]\n\n# 查看远程仓库信息\ngit remote show <remote-name>\n\n# 远程仓库重命名\ngit remote rename <name-old> <name-new>\n\n# 移除远程仓库\ngit remote rm <remote-name>\n\n```\n\n### 分支管理 \n```bash\n# 查看分支列表\ngit branch\n\n# 查看每一个分支的最后一次提交\ngit branch -v \n\n# 创建并切换到新的分支\ngit checkout -b <branch-name> \n\n# 切换分支\ngit checkout <branch-name>\n\n# 删除分支\ngit branch -d <branch-name>\n\n# 强制删除分支\ngit branch -D <branch-name> \n\n# 查看哪些分支已经合并到当前分支\ngit branch --merged\n\n# 查看尚未合并到当前分支的分支\ngit branch --no-merged \n\n```\n\n### 暂存和提交\n```bash\n# 查看文件状态\ngit status\n\n# 跟踪新文件 或 暂存已更改文件，还能用于合并时把有冲突的文件标记为已解决的状态等\ngit add <file>\n\n# 新添加的未跟踪文件前边有??标记\n# 新添加到暂存区的文件前边有A标记\n# 修改过的文件前边有M标记\n# M放在右边标识文件修改过但是还没有放到暂存区\n# M出现在左边标识文件修改过并已放入暂存区\n\ngit status -s | git status --short\n\n# 查看已暂存和未暂存的修改\n# 查看尚未暂存的文件更新了哪些部分\n# 此命令查看的是工作目录与暂存区的差异，也就是修改之后还没有暂存起来的变化\ngit diff \n\n# 查看已经暂存起来的将要添加到下次提交的内容\ngit diff --cached | git diff --staged\n\n# 提交更新\ngit commit | git commit -m \n\n# 暂存并提交\ngit commit -a | git commit -a -m\n\n# 移除文件，要从git中移除某个文件，就必须要从暂存区域移除\ngit rm <file> # 连带从工作目录中删除指定文件\n\n# 如果删除之前修改过，并且已经放入到暂存区的话，则必须使用强制删除选项-f    \ngit rm -f <file>\n\n# 把文件从暂存区移除\ngit rm --cached <file>\n\n# 移动文件或修改文件名称\ngit mv <file-old> <file-new>\n```\n\n### 撤销\n```bash\n# 修改上次提交\ngit commit --amend | git commit --amend -m\n\n# 取消暂存文件\ngit reset HEAD <file>\n\n# 撤销对文件的修改\ngit checkout -- <file>\n```\n\n### 提交日志\n```bash\ngit log\n\n# 显示每次提交之间的差异\ngit log -p \n\n# 显示最近 n 次的提交\ngit log -<n>\n\n# 显示简略统计信息\ngit log --stat\n\ngit log --pretty=<oneline|short|full|fuller>\n\n# %H完整哈希字串，%h简短哈希字串\n# %T树对象完整哈希字串，%t树对象简短字串\n# %P父对象哈希，%p父对象简短哈希字串\n# %an作者名字，%ae作者电子邮箱 \n# %ad作者修订日期，%ar作者修订日期（按多久以前的方式显示）\n# %cn提交者的名字，%ce提交者邮箱\n# %cd提交日期, %cr提交日期（按多久以前显示）, %cs提交说明 \ngit log --pretty=format:\"<输出规则>\" \n\n# 以ASCII图形显示提交合并历史\ngit log --graph\n\ngit log --since=<日期> | git log --until=<> | git log --before= | git log --after=\ngit log --grep=<keywords>\ngit log --author=<authorname>\ngit log --committer=<committer>\n```\n\n### 标签管理\n```bash\n# 列出标签\ngit tag\n\n# 打标签\ngit tag -a <tag-name> -m <msg> # 创建带附注的标签\ngit tag <tag-name> # 创建轻量标签\ngit tag -a <tag-name> <哈希字串> # 后期打标签\n\n# 查看标签信息\ngit show <tag-name>\n\n# 推送标签到远程仓库\ngit push <remote-name> <tagname>\n\n# 推送所有标签\ngit push <remote-name> --tags\n\n# 在指定的标签上创建分支\ngit checkout -b <branch-name> <tag-name> \n```\n",
    "topic": "",
    "keywords": [
      "git"
    ]
  }
}