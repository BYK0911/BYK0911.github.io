{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./src/docs/doc.ts","webpack:///./src/common/storage.ts","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.json.stringify.js","webpack:///./node_modules/core-js/modules/es.array.slice.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","sCount","blkIndent","skipSpacesBack","skipCharsBack","line","push","markup","map","content","children","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","options","this","inline","block","core","renderer","linkify","configure","set","presets","self","Error","components","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","isArray","chain","missed","filter","length","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","i","len","attrPush","attrData","attrSet","value","idx","attrGet","attrJoin","StateInline","md","outTokens","tokens_meta","posMax","pending","pendingLevel","cache","delimiters","_prev_delimiters","backticks","backticksScanned","pushPending","token_meta","pop","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","global","isConstructor","isObject","wellKnownSymbol","SPECIES","originalArray","C","constructor","undefined","DOMIterables","DOMTokenListPrototype","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","$forEach","arrayMethodIsStrict","STRICT_METHOD","callbackfn","terminate","l","oldParentType","nextLine","terminatorRules","getRules","parentType","isEmpty","skipChars","skipSpaces","getLines","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","fails","V8_VERSION","METHOD_NAME","array","foo","Boolean","curr","last","$","uncurryThis","notARegExp","requireObjectCoercible","correctIsRegExpLogic","stringIndexOf","target","proto","forced","includes","searchString","EMAIL_RE","AUTOLINK_RE","fullUrl","pmax","ws","slashes","auth","port","pathname","search","hash","lineMax","classof","MATCH","it","isRegExp","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","fn","at","index","opt","before","beforeName","ruleName","splice","after","afterName","chainName","topics","defaultDocs","require","localStorage","setItem","JSON","stringify","get","getItem","_docs","_topics","d","id","t","matchStart","matchEnd","openerLength","closerLength","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","initial","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","offset","oldListIndent","oldSCount","oldTShift","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","bsCount","Math","min","tokenize","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","skipToken","ok","end","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","join","lineText","arraySpeciesConstructor","ESCAPED","split","StateCore","hasEmptyLines","skipEmptyLines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","text","html_block","html_inline","nextToken","needLf","lines","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","shift","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","toPropertyKey","definePropertyModule","createPropertyDescriptor","propertyKey","f","decodeCache","getDecodeCache","exclude","string","seq","b1","b2","b3","b4","chr","componentChars","j","startDelim","endDelim","loneMarkers","scanned","label","labelEnd","labelStart","ref","res","title","href","oldPos","references","isLinkOpen","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","urlText","links","blockTokens","pretest","schema","lastIndex","tok","argument","method","Core","regexp","error1","error2","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","exec","single","blkIdx","opts","re","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","bind","IndexedObject","toObject","lengthOfArrayLike","arraySpeciesCreate","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","$this","that","specificCreate","O","boundFunction","create","some","every","find","findIndex","filterReject","isTerminatorChar","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","params","mem","haveEndMarker","isLetter","lc","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","isStrong","$includes","addToUnscopables","el","parseReference","Any","Cc","Cf","P","Z","_endLine","destEndPos","destEndLineNo","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","unshift","qm","disableNested","found","prevPos","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","spaceAfterMarker","isOutdented","oldLineMax","getBuiltIn","$stringify","charAt","numberToString","tester","low","hi","fix","prev","next","FORCED","stat","replacer","space","toAbsoluteIndex","toIndexedObject","createProperty","arrayMethodHasSpeciesSupport","un$Slice","HAS_SPECIES_SUPPORT","Constructor","n","fin","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","alias","slist","schema_test","schema_search","Match","__last_index__","__schema__","raw","createMatch","schemas","add","definition","m","ml","me","tld_pos","at_pos","testSchemaAt","keepOld","sort","reverse","cnt"],"mappings":"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","file":"js/doc~doc-editor~doc-reader.fd932bfd.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","var global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","export const docs =  {\n  \"value\": [\n    \"1645433309313\",\n    \"1645433358746\",\n    \"1645433467140\",\n    \"1645433524733\",\n    \"1645435264368\",\n    \"1646029388219\",\n    \"1646043364532\",\n    \"1646043487123\",\n    \"1646043652524\",\n    \"1646043731876\",\n    \"1646288680934\"\n  ]\n}\n\nexport const topics = {\n  \"value\": [\n    \"Canvas 绘图\",\n    \"Vue\",\n    \"Adobe CEP 插件开发\"\n  ]\n}","\nimport { topics } from '../docs/doc';\n\nconst defaultDocs = [\n  require('../docs/1645433309313.json'),\n  require('../docs/1645433358746.json'),\n  require('../docs/1645433467140.json'),\n  require('../docs/1645433524733.json'),\n  require('../docs/1645435264368.json'),\n  require('../docs/1646029388219.json'),\n  require('../docs/1646043364532.json'),\n  require('../docs/1646043487123.json'),\n  require('../docs/1646043652524.json'),\n  require('../docs/1646043731876.json'),\n  require('../docs/1646288680934.json'),\n];\n\nfunction set (key: string | number, value: unknown): void {\n  const content = { value }\n  localStorage.setItem(key + '', JSON.stringify(content))\n}\n\nfunction get (key: string): unknown {\n  const value = localStorage.getItem(key)\n  return value ? JSON.parse(value).value : null\n}\n\nconst _docs = get('docs') as unknown[] || []\nconst _topics = get('topics') as unknown[] || []\n\ndefaultDocs.forEach(d => {\n  if (!_docs.includes(d.value.id)) {\n    set(d.value.id, d.value)\n    _docs.push(d.value.id)\n  }\n  topics.value.forEach(t => {\n    if (_topics.indexOf(t) === -1) {\n      _topics.push(t)\n    }\n  })\n})\n\nset('docs', _docs)\nset('topics', _topics)\n\nexport default {\n  set,\n  get\n}","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\n\nvar Array = global.Array;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar fix = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nvar FORCED = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  // https://github.com/tc39/proposal-well-formed-stringify\n  $({ target: 'JSON', stat: true, forced: FORCED }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      for (var i = 0, l = arguments.length, args = Array(l); i < l; i++) args[i] = arguments[i];\n      var result = apply($stringify, null, args);\n      return typeof result == 'string' ? replace(result, tester, fix) : result;\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar un$Slice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return un$Slice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n"],"sourceRoot":""}